
---------------------------------------------------------[CLASE MAIN]-----------------------------------------------------------------------------------------


package bolsa_tda_edd;

import java.util.Scanner;
public class Bolsa_TDA_EDD {
     
     static Scanner leer=new Scanner(System.in);
     static int opcion=0;
     static Object elemento;
    public static void main(String[] args) {
        Bolsa_List Bolson=new Bolsa_List();
      
        
        
          do{
       try{
        System.out.println("MENU-ACCIONES-CON-LA-BOLSA");
        System.out.println("[1] Ingresar Elemento");//ESTE ES EL INGRESAR 
        System.out.println("[2] Verificar si la Bolsa Esta Vacia");//ESTE ES EL EsVacia
        System.out.println("[3] Numero De Elementos De Un Tipo Presentes En La Bolsa");//ESTE ES EL [CUANTOS] elementos de un tipo hay en la bolsa 
        System.out.println("[4] Mostrar Elementos De La Bolsa");//sirve para verificar que la cantidad que resulte de la opcion 3 es valida
        System.out.println("[5] salir");
        opcion=leer.nextInt();
       }
       catch(Exception e){
           System.out.println("Ingrese un parametro valido");
           leer.nextLine();//si hay una exepcion entonces leera la siguente linea y pedira un nuevo valor
           for (int i = 0; i < 4; i++) {//sirve solo para dar espaciado y que no se vea todo amontonado
               
           }
           
       }
        switch(opcion){
            
            case 1:
                System.out.println("Ingrese Elemento a la Bolsa ");
                elemento=leer.next();
                Bolson.Insertar(elemento);
                System.out.println("Elemento Ingresado");
                for (int i = 0; i < 4; i++) {
                    System.out.println("");//sirve solo para dar espaciado y que no se vea todo amontonado
                }
                break;
    
            case 2:
                
                
                if (Bolson.EsVacia()==true) {
                    System.out.println("La Bolsa Esta Vacia");     
                }
                
                else{
                    System.out.println("La Bolsa No Esta Vacia");
                }
                for (int i = 0; i < 4; i++) {
                    System.out.println("");//sirve solo para dar espaciado y que no se vea todo amontonado
                }
               
                break;
                
            case 3:
             
                System.out.println("Ingrese un elemento para verificar cuantos existe de ese tipo dentro de la bolsa");
                elemento=leer.next();
                System.out.println("La Bolsa Dispone De: "+Bolson.Cuantos(elemento)+" Elementos del tipo que ingreso");
                
                for (int i = 0; i < 4; i++) {
                    System.out.println("");//sirve solo para dar espaciado y que no se vea todo amontonado
                }
                
                break;
                
                case 4:
                    System.out.println("Los Elementos Presentes en la bolsa son:");
                    Bolson.MostrarElementos();
                     for (int i = 0; i < 4; i++) {//sirve solo para dar espaciado y que no se vea todo amontonado
                    System.out.println("");
                }
               
                    break;
                    
                
            case 5:
                System.out.println("Fin Del Programa");
                break;
            default:
                System.out.println("Ingrese una opcion en el rango 1-5");
                     for (int i = 0; i < 4; i++) {//sirve solo para dar espaciado y que no se vea todo amontonado
                    System.out.println("");
                }
               
                break;
            
        }
        
       
        }while(opcion!=5);
        
    }
    
    
   
    
}

---------------------------------------------------------[CLASE Bolsa]-----------------------------------------------------------------------------------------

package bolsa_tda_edd;


public class Bolsa {
    
   Object Elemento;//elemento que posee la bolsa
   Bolsa Siguiente;
    
    
    
    
    
}

---------------------------------------------------------[CLASE Bolsa_List]-----------------------------------------------------------------------------------------


package bolsa_tda_edd;

import java.util.Scanner;
public class Bolsa_List {
    
    Scanner leer=new Scanner(System.in);
    Bolsa PrimerElemento;
    Bolsa UltimoElemnto;
    
    
    
    public Bolsa_List(){
        
        PrimerElemento=null;
        UltimoElemnto=null;
        
        
    }
    
    
    public void Insertar(Object N_Elemento){
        
        Bolsa NuevoElemento=new Bolsa();
        NuevoElemento.Elemento=N_Elemento;
        
        if (PrimerElemento==null) {
            
          PrimerElemento=NuevoElemento;//como al inicio es null entonces primero apunta a nuevo
          PrimerElemento.Siguiente=null;//luego hacemos que nuevo que ahora es el primero apunte a null
          UltimoElemnto=PrimerElemento;// luego hacemos que ultimo apunte a primero y como primero es nuevo y nuevo apunta a null entonces quedo ya
            
        }
        else
        {
        UltimoElemnto.Siguiente=NuevoElemento;//como antes ultimo estaba apuntando a null entonces ahora el primero apuntara a uno nuevo y luego ese
        NuevoElemento.Siguiente=null;//nuevo apuntara a null
        UltimoElemnto=NuevoElemento;//y luego ultimo apuntara a el nuevo que apunta a null
        }
        
        
    }
    
    public boolean EsVacia(){
        boolean Respuesta=false;
        
        if (PrimerElemento==null) {//si el primer elemento es null entonces la bolsa esta vacia
            
            Respuesta=true;
            
        }
        
        return Respuesta;
    }
    
    public int Cuantos(Object Elemento){
        
        int contadorElementos=0;//servira para contar los elementos que esten en la bolsa
        boolean RespuestaVacio=false;//servira para conocer la respuesta de si esta vacia o no la bolsa segun el metodo EsVacia
        Bolsa ElementoAux=new Bolsa();//servira para recorrer los elementos de la bolsa
        ElementoAux=PrimerElemento;
        
        RespuestaVacio=EsVacia();
        
        while (ElementoAux!=null) 
        {
            if (RespuestaVacio==false) //si mandan true esta vacia y si es false esta llena y puede entrar a buscar si aparece el elemento
                //que se desee encontrar

            {
            
            if (ElementoAux.Elemento.equals(Elemento)) //si encuentra el elemento en la bolsa entoncces le suma uno al contador
            { 
                
                contadorElementos++;//se ira incrementando con forme este recorriendo toda la bolsa
                
            }
            
            else
            {
                contadorElementos=0;
            }
           
          }
            
            
            else{//si es true que esta vacia entonces de una vez marca 0 elementos en la bolsa
                contadorElementos=0;
            }
           
            ElementoAux=ElementoAux.Siguiente;
            
        }
        
        return contadorElementos;//devolvera la cantidad de elementos que existan en la lista
    }
    
    
    public void MostrarElementos(){
        
        Bolsa ElementoAux=new Bolsa();
        
        ElementoAux=PrimerElemento;
        while (ElementoAux!=null) {
            
            System.out.println(ElementoAux.Elemento);
            ElementoAux=ElementoAux.Siguiente;
            
            
            
        }
        
        
        
    }
    
    
}
